package {	import flash.display.*;	import flash.events.*;	import flash.utils.*;	import flash.filters.BlurFilter;	import gs.TweenLite;	import flash.text.Font;	import flash.text.TextField;	import flash.text.TextFormat;	public class TweenGroups extends MovieClip	{		private var MCs:Array = new Array  ;//Tablica przechowująca poszczególne sektory		private var filterOn:BlurFilter = new BlurFilter(5,0,10);		private var filterOff:BlurFilter = new BlurFilter(0,0,10);		private var activeMC:MovieClip;//nowy sektor		private var newMC:MovieClip;//następny do uaktywnienia po przesuniąciu		private static var time = 0.45;//czas przesuniecia jednego ekranu w drugi		public function TweenGroups(xmlData:XML)		{			var groupId:int;			var groupFolder:String;			var groupList:XMLList = xmlData.grupy.grupa;			var a:int = 0;			for each (var groupXML:XML in groupList)			{				//if (a == 0){ //chwilowy knyf, zeby sie ladowala jedna grupa				groupId = groupXML.attribute("id");				groupFolder = groupXML.attribute("folder");				var mc = new Group(groupId,groupFolder,groupXML,xmlData);				mc.x = 1200;				activeButtons(mc);				addChild(mc);				mc.visible = false;				mc.bottomBanners.switchOn = false;				MCs.push(mc );				//trace(MCs.x);				//} a=1;			}			activeMC = MCs.shift();			activeMC.x = 0;			activeMC.y = 0;			activeMC.visible = true;			//addChild(activeMC);			activeMC.bottomBanners.switchOn = true;			activeMC.click1(new MouseEvent(MouseEvent.CLICK));			//trace(activeMC.idNum);			//trace(activeMC.x);		}		public function clickR(event:MouseEvent)		{			newMC = MCs.shift();// Wyciąga pierwszy element tablicy			newMC.x = 950;			newMC.visible = true;			newMC.click1(new MouseEvent(MouseEvent.CLICK));			//addChild(newMC);			activeMC.filters = [filterOn];			newMC.filters = [filterOn];			if (getChildIndex(newMC) < getChildIndex(activeMC))			{				swapChildren(newMC, activeMC);			}			activeMC.bottomBanners.switchOn = false;			newMC.bottomBanners.switchOn = true;			TweenLite.to(activeMC, time, {x: -950, onComplete: blurOffa, onCompleteParams:[activeMC]});			TweenLite.to(newMC, (time), {x: -1, onComplete: blurOff, onCompleteParams:[newMC]});			MCs.push(activeMC);// Dodaje na końcu tablicy 			activeMC = newMC;		}		public function clickL(event:MouseEvent)		{			newMC = MCs.pop();// Wyciąga ostatni element tablicy			newMC.x = -952;			newMC.visible = true;			newMC.click1(new MouseEvent(MouseEvent.CLICK));			//addChild(newMC);			activeMC.filters = [filterOn];			newMC.filters = [filterOn];			if (getChildIndex(newMC) < getChildIndex(activeMC))			{				trace("1");				swapChildren(newMC, activeMC);				//setChildIndex(newMC, numChildren - 1); 			}			activeMC.bottomBanners.switchOn = false;			newMC.bottomBanners.switchOn = true;			TweenLite.to(activeMC, time, {x: 950, onComplete: blurOffa, onCompleteParams:[activeMC]});			TweenLite.to(newMC, time, {x: -1, onComplete: blurOff, onCompleteParams:[newMC]});			MCs.unshift(activeMC);// Dodaje na początku tablicy			activeMC = newMC;		}		function activeButtons(mc:MovieClip)		{			mc.left.addEventListener(MouseEvent.CLICK, clickL);			mc.right.addEventListener(MouseEvent.CLICK, clickR);			//mc.left.addEventListener(MouseEvent.ROLL_OVER, onRollOverHandler);			//mc.right.addEventListener(MouseEvent.ROLL_OVER, onRollOverHandler);		}		function blurOff(mc:MovieClip)		{			mc.filters = [filterOff];		}		function blurOffa(mc:MovieClip)		{			//removeChild(mc);			mc.visible = false;			mc.filters = [filterOff];		}	}}
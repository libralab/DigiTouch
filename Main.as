package {///952 x 604	import flash.display.*;	import flash.display.LoaderInfo;	import flash.xml.*;	import flash.events.*;	import br.com.stimuli.loading.BulkLoader;	import br.com.stimuli.loading.BulkProgressEvent;	import org.lzyy.util.ForcibleLoader;	import flash.net.*;	import flash.system.*;	import flash.text.Font;	import flash.text.TextField;	import flash.text.TextFormat;	public class Main extends Sprite	{		private var flashVars:String;		static public var mc1:MovieClip;		static public var mc2:MovieClip;		static public var mc3:MovieClip;		static public var mc4:MovieClip;		static public var xml:XML;		static public var loader:BulkLoader;		private var MCs:Array;//tablica movieclipow grupa (glownych)		private var groups:TweenGroups;		private var loaderContext:LoaderContext;		public function Main():void		{			loader = new BulkLoader("main-site");			//mc1 = this.ekran1;			//mc2 = this.ekran2;			//mc3 = this.ekran3;			//mc4 = this.ekran4;			MCs = new Array  ;			//flashvars = loaderInfo.parameters;			flashVars = LoaderInfo(this.root.loaderInfo).parameters.xmlFile;			flashVars = "1.xml";			// you can also listen to events in individual items               			// this will fire as soon as the item registred with the id of "bg" is done loading (even if there are other items to load)			//loader.get("bg").addEventListener(Event.COMPLETE,onBackgroundLoaded)			loader.add(flashVars, {id:"xml", priority:20});			loader.get("xml").addEventListener(Event.COMPLETE, xmlComplete);			loader.start();			//Wlaczenie przesuwania grup strzalkami			//TweenMovieClips.tween();			//var loaderSwf:Loader = Loader(addChild(new Loader()));			//var fLoader:ForcibleLoader = new ForcibleLoader(loaderSwf);			//fLoader.load(new URLRequest('banergorny/BannerRotatorFX.swf'));			//trace(fLoader);			//loaderSwf.contentLoaderInfo.addEventListener( Event.COMPLETE, loadCompleteHandler );			//loaderSwf.contentLoaderInfo.addEventListener( IOErrorEvent.IO_ERROR, ioErrorHandler );			//loaderSwf.contentLoaderInfo.addEventListener( SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler );			//var loaderSwf:Loader = new AVM2Loader();			//loaderContext = new LoaderContext();			//loaderContext.allowLoadBytesCodeExecution = true;			//loaderSwf.load("banergorny/BannerRotatorFX.swf", loaderContext);			//loaderSwf.contentLoaderInfo.addEventListener( Event.COMPLETE, loadCompleteHandler );		}//		private function loadCompleteHandler(e:Event):void//		{////			//TODO handle load//			trace("jest");//			//var libMC:MovieClip = e.currentTarget.content as MovieClip;//			//addChild(libMC);////		}//////		private function securityErrorHandler(e:SecurityErrorEvent):void//		{////			//TODO handle some security errors//			trace("e1");//		}////////		private function ioErrorHandler(e:IOErrorEvent):void//		{////			//TODO handle some IO errors//			trace("e2");//		}		private function xmlComplete(event:Event):void		{			try			{				xml = loader.getXML("xml");				//trace(xml.grupy);				//readNodes(externalXML);			}			catch (event:TypeError)			{				trace("Could not parse the XML file.");			}			groups = new TweenGroups(xml);			addChild(groups);		}	}}
package {	import flash.display.*;	import flash.display.LoaderInfo;	import flash.xml.*;	import flash.events.Event;	import br.com.stimuli.loading.BulkLoader;	import br.com.stimuli.loading.BulkProgressEvent;	import flash.text.Font;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.events.MouseEvent;	import gs.TweenLite;	//grupa sektorow przelaczana prawo - lewo	public class Group extends MovieClip	{		public var idNum:int;		public var MCs:Array;//tablica movieclipow element (glownych)		public static var buttons:Array;//tablica movieclipow element (glownych)		private var bgLoader:BulkLoader;		private var arrowLoader:BulkLoader;		private var arrowHLLoader:BulkLoader;		private var arrowHRLoader:BulkLoader;		public static var groupLoader:BulkLoader;		private static var activator:Boolean = true;		public var left:SimpleButton;		public var right:SimpleButton;		private var groupFolder:String;		private var buttonsWidth:int;		private var buttonsX:int;		private var grupaXML:XML;		public var mainXML:XML;		public var bottomBanners:BottomBanners;		public var leftBMP:Bitmap;		public var rightBMP:Bitmap;		private var time:int = 1;		//public static var a:Boolean = true;		public function Group(num:int, folder:String, gXML:XML, mXML:XML):void		{			mainXML = mXML;			grupaXML = gXML;			idNum = num;			MCs = new Array  ;			buttons = new Array  ;			bgLoader = new BulkLoader(String(idNum + 10));			groupFolder = folder;			buttonsWidth = 250;			buttonsX = 20;			arrowLoader = new BulkLoader("arrowLoader" + String(idNum));			arrowHLLoader = new BulkLoader("arrowHLLoader" + String(idNum));			arrowHRLoader = new BulkLoader("arrowHRLoader" + String(idNum));			groupLoader = new BulkLoader(String(num));			left = new SimpleButton();			right = new SimpleButton();			left.x = 5;			left.y = 265;			right.x = 915;			right.y = 265;			//var elementList:XMLList = Main.xml.grupy.grupa.attributes();			bgLoader.add("flash/background.jpg", {id:"bg"});			bgLoader.get("bg").addEventListener(Event.COMPLETE, onBackgroundLoaded);			bgLoader.start();			arrowLoader.add("flash/left.png", {id:"left"});			arrowHLLoader.add("flash/left_hover.png", {id:"left_h"});			arrowHLLoader.get("left_h").addEventListener(Event.COMPLETE, onLefthLoaded);			arrowLoader.get("left").addEventListener(Event.COMPLETE, onLeftLoaded);			arrowLoader.add("flash/right.png", {id:"right"});			arrowHRLoader.add("flash/right_hover.png", {id:"right_h"});			arrowHRLoader.get("right_h").addEventListener(Event.COMPLETE, onRighthLoaded);			arrowLoader.get("right").addEventListener(Event.COMPLETE, onRightLoaded);			var elementId:int;			var elementName:String;			var elementList:XMLList = grupaXML.elementy.element;			for each (var elementXML:XML in elementList)			{				elementId = elementXML.attribute("id");				elementName = elementXML.attribute("name");				//trace(elementId);				//trace(elementName);				//trace();				var folder:String = groupFolder + elementXML.attribute("folder");				var mc:Element = new Element(elementId,folder,elementXML,grupaXML);				activeButtons(mc);				addChild(mc);				//setChildIndex(mc, 0);				MCs.push( mc );			}			//click1(MouseEvent.CLICK);			groupLoader.start();			bottomBanners = new BottomBanners(mainXML);			//trace(bottomBanners); 			bottomBanners.x = 20;			//bottomBanners.y = 0;			bottomBanners.y = 450;			addChild(bottomBanners);									///MCs[3].buttons[4].upState = MCs[3].buttons[4].downState;		}		public function clickB(event:MouseEvent, i:int)		{			//newMC = MCs.pop();// Wyciąga ostatni element tablicy			//newMC.x = -954;			//			//activeMC.filters = [filterOn];			//newMC.filters = [filterOn];			//			//TweenLite.to(activeMC, time, {x: 954, onComplete: blurOff, onCompleteParams:[activeMC]});			//TweenLite.to(newMC, time, {x: -1, onComplete: blurOff, onCompleteParams:[newMC]});			//			//MCs.unshift(activeMC);// Dodaje na początku tablicy			//activeMC = newMC;		}		function activeButtons(mc:MovieClip)		{			//for each (var button:SimpleButton in mc.buttons){			//trace(button);			//var i :int;			//button.addEventListener(MouseEvent.CLICK, clickB(i));			//			//}			if (mc.buttons[1])			{				mc.buttons[1].addEventListener(MouseEvent.CLICK, click1);			}			if (mc.buttons[2])			{				mc.buttons[2].addEventListener(MouseEvent.CLICK, click2);			}			if (mc.buttons[3])			{				mc.buttons[3].addEventListener(MouseEvent.CLICK, click3);			}			if (mc.buttons[4])			{				mc.buttons[4].addEventListener(MouseEvent.CLICK, click4);			}								}				public function click4(event:MouseEvent)		{			//TweenLite.to(MCs[1], time, {alpha: 100});			//TweenLite.to(MCs[2], time, {alpha: 0});			//TweenLite.to(MCs[3], time, {alpha: 0});			//TweenLite.to(MCs[4], time, {alpha: 0});			//setChildIndex(MCs[1], 1);			//setChildIndex(MCs[2], 1);			//setChildIndex(MCs[3], 1);			//setChildIndex(MCs[4], 1);			//trace(getChildIndex(MCs[0]));			//trace(getChildIndex(MCs[1]));			//trace(getChildIndex(MCs[2]));			//trace(getChildIndex(MCs[3]));			//			//MCs[0].setChildIndex(MCs[0], 4);			//MCs[1].setChildIndex(MCs[1], 1);			//MCs[2].setChildIndex(MCs[2], 2);			//MCs[3].setChildIndex(MCs[3], 3);			//trace(MCs[0].x);			//trace(groupLoader.contents);			if (MCs[0]) MCs[0].visible = false;			if (MCs[1]) MCs[1].visible = false;			if (MCs[2]) MCs[2].visible = false;			if (MCs[3]) MCs[3].visible = true;			if (MCs[3].buttons[1]) MCs[3].buttons[1].upState = MCs[3].buttons[1].downState;			if (MCs[3].buttons[2]) MCs[3].buttons[2].upState = MCs[3].buttons[2].downState;			if (MCs[3].buttons[3]) MCs[3].buttons[3].upState = MCs[3].buttons[3].downState;			if (MCs[3].buttons[4]) MCs[3].buttons[4].upState = MCs[3].buttons[4].upState;		}		public function click3(event:MouseEvent)		{			//trace(groupLoader.contents);			if (MCs[0]) MCs[0].visible = false;			if (MCs[1]) MCs[1].visible = false;			if (MCs[2]) MCs[2].visible = true;			if (MCs[3]) MCs[3].visible = false;			if (MCs[2].buttons[1]) MCs[2].buttons[1].upState = MCs[2].buttons[1].downState;			if (MCs[2].buttons[2]) MCs[2].buttons[2].upState = MCs[2].buttons[2].downState;			if (MCs[2].buttons[3]) MCs[2].buttons[3].upState = MCs[2].buttons[3].upState;			if (MCs[2].buttons[4]) MCs[2].buttons[4].upState = MCs[2].buttons[4].downState;		}		public function click2(event:MouseEvent)		{			//trace(groupLoader.contents);			if (MCs[0]) MCs[0].visible = false;			if (MCs[1]) MCs[1].visible = true;			if (MCs[2]) MCs[2].visible = false;			if (MCs[3]) MCs[3].visible = false;						if (MCs[1].buttons[1]) MCs[1].buttons[1].upState = MCs[1].buttons[1].downState;			if (MCs[1].buttons[2]) MCs[1].buttons[2].upState = MCs[1].buttons[2].upState;			if (MCs[1].buttons[3]) MCs[1].buttons[3].upState = MCs[1].buttons[3].downState;			if (MCs[1].buttons[4]) MCs[1].buttons[4].upState = MCs[1].buttons[4].downState;		}		public function click1(event:MouseEvent)		{//			//trace(groupLoader.contents);			if (MCs[0]) MCs[0].visible = true;			if (MCs[1]) MCs[1].visible = false;			if (MCs[2]) MCs[2].visible = false;			if (MCs[3]) MCs[3].visible = false;			if (MCs[0].buttons[1]) MCs[0].buttons[1].upState = MCs[0].buttons[1].upState;			if (MCs[0].buttons[2]) MCs[0].buttons[2].upState = MCs[0].buttons[2].downState;			if (MCs[0].buttons[3]) MCs[0].buttons[3].upState = MCs[0].buttons[3].downState;			if (MCs[0].buttons[4]) MCs[0].buttons[4].upState = MCs[0].buttons[4].downState;			//			if (MCs[0].buttons[1]) trace("1");//			if (MCs[0].buttons[2]) trace("2");//			if (MCs[0].buttons[3]) trace("3");//			if (MCs[0].buttons[4]) trace("4");						//trace("aaa");		}		private function onBackgroundLoaded(event:Event):void		{			var bg:Bitmap = bgLoader.getBitmap("bg");			bg.x = 0;			addChild(bg);			setChildIndex(bg, 0);			arrowLoader.start();		}		private function onLeftLoaded(event:Event):void		{			leftBMP = arrowLoader.getBitmap("left");			arrowHLLoader.start();			//trace("a");		}		private function onRightLoaded(event:Event):void		{			rightBMP = arrowLoader.getBitmap("right");			arrowHRLoader.start();		}		private function onLefthLoaded(event:Event):void		{			//addChild(left);			var lefthBMP:Bitmap = arrowHLLoader.getBitmap("left_h");			left.upState = leftBMP;			left.downState = lefthBMP;			left.overState = lefthBMP;			left.hitTestState = leftBMP;			addChild(left);		}		private function onRighthLoaded(event:Event):void		{			//addChild(right);			//var rightBMP:Bitmap = arrowLoader.getBitmap("right");			var righthBMP:Bitmap = arrowHRLoader.getBitmap("right_h");			right.upState = rightBMP;			right.downState = righthBMP;			right.overState = righthBMP;			right.hitTestState = rightBMP;			addChild(right);		}	}}